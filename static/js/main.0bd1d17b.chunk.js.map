{"version":3,"sources":["components/pokemon/Pokemon.js","components/pokemonCard/PokemonCard.js","components/cardList/CardList.js","App.js","reportWebVitals.js","index.js"],"names":["Pokemon","url","img","name","hp","type","weight","height","this","axios","get","result","fetchData","then","r","data","species","sprites","other","dream_world","front_default","stats","base_stat","types","PokemonCard","pokemon","useState","setName","setImg","setHP","setType","setWeight","setHeight","useEffect","a","newPokemon","console","log","getPokemon","className","src","alt","CardList","pokemons","setPokemons","setUrl","results","next","previous","fetchPokemon","onClick","window","location","reload","disabled","map","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bd1d17b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nclass Pokemon {\n    constructor(url, img, name, hp, type, weight, height) {\n        this.url = url;\n        this.img = img;\n        this.name = name;\n        this.hp = hp;\n        this.type = type;\n        this.weight = weight;\n        this.height = height;\n    }\n\n    async fetchData(url) {\n        const result = await axios.get(url);\n        return result;\n    }\n\n    setData(url) {\n        this.fetchData(url).then(r => {\n            this.name = r.data.species.name;\n            this.img = r.data.sprites.other.dream_world.front_default;\n            this.hp = r.data.stats[0].base_stat;\n            this.type = r.data.types[0].type.name;\n            this.weight = r.data.weight;\n            this.height = r.data.height;\n        })\n\n\n    }\n}\n\nexport default Pokemon;","import React, {useEffect, useState} from \"react\";\nimport \"./PokemonCard.css\";\nimport Pokemon from \"../pokemon/Pokemon\";\n\nfunction PokemonCard({pokemon}) {\n    const [name, setName] = useState('');\n    const [img, setImg] = useState('');\n    const [hp, setHP] = useState('');\n    const [type, setType] = useState('');\n    const [weight, setWeight] = useState('');\n    const [height, setHeight] = useState('');\n\n    useEffect(() => {\n        async function getPokemon() {\n            try {\n                let newPokemon = new Pokemon();\n                newPokemon.fetchData(pokemon.url).then(r => {\n                        setName(r.data.species.name);\n                        setImg(r.data.sprites.other.dream_world.front_default)\n                        setHP(r.data.stats[0].base_stat);\n                        setType(r.data.types[0].type.name);\n                        setWeight(r.data.weight);\n                        setHeight(r.data.height);\n\n                        return newPokemon;\n                    }\n                );\n                return newPokemon;\n            } catch (e) {\n                console.log(e)\n            }\n        }\n        getPokemon();\n    }, [pokemon]);\n    return (\n        <>\n            <div className=\"card\">\n                <img className=\"pokemonImage\" src={img} alt={name}/>\n                <h1 className=\"pokemonName\">{name}</h1>\n                <h5 className=\"pokemonHP\">HP {hp}</h5>\n                <ul className=\"pokemonInfo\">\n                    <li className=\"infoElement\">Type: {type}</li>\n                    <li className=\"infoElement\">Weight: {weight}</li>\n                    <li className=\"infoElement\">Height: {height}</li>\n                </ul>\n            </div>\n        </>\n    );\n}\n    \n\nexport default PokemonCard;","import React, {useEffect,useState} from \"react\";\nimport PokemonCard from \"../pokemonCard/PokemonCard\";\nimport \"./cardList.css\";\nimport axios from \"axios\";\n\nfunction CardList() {\n    const [pokemons, setPokemons] = useState([]);\n    const [url, setUrl] = useState('https://pokeapi.co/api/v2/pokemon');\n\n    async function fetchPokemon() {\n        try {\n            const {data: {results, next, previous}} = await axios.get(url);\n            setPokemons({\n                results: results,\n                next: next,\n                previous: previous,\n            });\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    useEffect(() => {\n        url && fetchPokemon();\n    }, [url]);\n\n    return (\n        <>\n            <img\n                src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/98/International_Pok%C3%A9mon_logo.svg/1024px-International_Pok%C3%A9mon_logo.svg.png\"\n                alt=\"Pokemon Logo\"\n                className=\"pokemonLogo\"\n                onClick={window.location.reload}\n            />\n            <nav className=\"navigation\">\n                <button type=\"button\" disabled={!pokemons.previous} onClick={() => setUrl(pokemons.previous)}\n                        className=\"navButton\">Previous\n                </button>\n                <button type=\"button\" disabled={!pokemons.next} onClick={() => setUrl(pokemons.next)}\n                        className=\"navButton\">Next\n                </button>\n            </nav>\n            <div className=\"cards\">\n                {pokemons.results && pokemons.results.map(pokemon => {\n                        return <PokemonCard pokemon={pokemon}/>\n                    }\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default CardList;","import React from 'react';\nimport './App.css';\n\n//Components\nimport CardList from \"./components/cardList/CardList\";\n\nfunction App() {\n    return (\n        <>\n            <CardList />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}